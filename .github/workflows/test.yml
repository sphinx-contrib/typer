name: Test
  
on:
  push:
    tags-ignore:
      - '*'
    branches:
      - '*'
  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Open ssh debug session.'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: '0 13 * * *'  # Runs at 6 am pacific every day
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14.0-rc.3']
        sphinx-version:
          - '6.0'
          - '7.0'
          - '8.0'
        exclude:
          - python-version: '3.12'
            sphinx-version: '7.0'
          - python-version: '3.12'
            sphinx-version: '6.0'
          - python-version: '3.13'
            sphinx-version: '7.0'
          - python-version: '3.13'
            sphinx-version: '6.0'
          - python-version: '3.9'
            sphinx-version: '8.0'
          - python-version: '3.14.0-rc.3'
            sphinx-version: '7.0'
          - python-version: '3.14.0-rc.3'
            sphinx-version: '6.0'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    - name: Install Just
      uses: extractions/setup-just@v3

    - name: Install Emacs
      if: ${{ github.event.inputs.debug == 'on' }}
      run: |
        sudo apt install emacs
    - name: Setup tmate session
      if: ${{ github.event.inputs.debug == 'on' }}
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true
      timeout-minutes: 60
    - name: Install Release Dependencies
      run: |
        sudo apt-get install libopenblas-dev libxml2-dev libxslt1-dev zlib1g-dev
        just test-lock "Sphinx~=${{ matrix.sphinx-version }}"

    - name: Run Unit Tests
      run: |
        just test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
